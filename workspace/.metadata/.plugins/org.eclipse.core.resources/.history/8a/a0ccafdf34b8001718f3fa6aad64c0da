/*
 * timer_sysclock_teste1.c
 *
 *  Created on: 03/09/2014
 *      Author: Edson
 */


#include "sys/alt_stdio.h"
#include "stdlib.h"
#include "sys/time.h"
#include "sys/alt_alarm.h"

#define 	true 1
#define 	false 0

unsigned int ticks_por_segundo;
unsigned int horas, minutos, segundos, microsegundos;


alt_u32 alarm_callback (void* context);
void imprimeDec (long numero);

int mudouHora;


int main (void) {

	 static alt_alarm alarm;
	 struct timeval agora;
	 //  int rc;


	//  Definição da hora inicial, de partida do sistema
	//  (entrata textual aqui no código, neste exemplo
	//  simples de código).
	horas = 13, minutos = 15, segundos = 10;
	microsegundos = 0;

	ticks_por_segundo = alt_ticks_per_second ();

	agora.tv_sec = ( ( horas * 60) + minutos) * 60 + segundos;
    agora.tv_usec = microsegundos;

    settimeofday (&agora, NULL);

    alt_alarm_start ( &alarm, ticks_por_segundo, alarm_callback, NULL );

    while(1) {

    	if ( mudouHora) {

    		alt_putstr ("\n\tHora certa: ");
    		imprimeDec ( horas); alt_putchar (':');
    		imprimeDec (minutos); alt_putchar (':');
    		imprimeDec (segundos); alt_putchar ('.');

    		mudouHora = false;

    	}


    }

}



alt_u32 alarm_callback (void* context)
{
    struct timeval now;
    // int rc;

    if ( ++segundos  == 60)  {
    	segundos = 0;
    	if (++minutos == 60) {
    		minutos = 0;
    		if (++horas ==24)
    			horas = 0;
    	}
    }

    mudouHora = true;

    gettimeofday (&now, NULL);
    alt_printf("Seconds: ");
    imprimeDec (  (unsigned int)now.tv_sec );
    alt_printf (".\n");  // REMOVE

    return ticks_por_segundo;
}


void imprimeDec (long numero)  {

    if (numero < 0) {
       alt_putchar ('-');
       numero = -numero;
    }

	if ( numero > 9 )  {
		imprimeDec (numero/10);
	    alt_printf ("%x", (int) numero%10);
	}
	else  if (numero > 0)
		alt_printf ( "%x", (int) numero);

	else {
	    alt_putchar ('0');
		return;

	}
}



