/*
 * "Hello World" example.
 *
 * This example prints 'Hello from Nios II' to the STDOUT stream. It runs on
 * the Nios II 'standard', 'full_featured', 'fast', and 'low_cost' example
 * designs. It runs with or without the MicroC/OS-II RTOS and requires a STDOUT
 * device in your system's hardware.
 * The memory footprint of this hosted application is ~69 kbytes by default
 * using the standard reference design.
 *
 * For a reduced footprint version of this template, and an explanation of how
 * to reduce the memory footprint for a given application, see the
 * "small_hello_world" template.
 *
 */

#include "sys/alt_stdio.h"
#include "altera_avalon_pio_regs.h"
#include "unistd.h"
#include "system.h"
/*#include <sstream>
#include <iostream>*/

#define motorX MOTORX_BASE   // Define a porta saida_A como controle do acionamento dos displays

#define saida(porta, valor)	IOWR_ALTERA_AVALON_PIO_DATA(porta, valor)
#define delay(atraso)	usleep(atraso*1000)

int main()
{
	//int val=17110;
	//cout << hex << val << endl;
	saida(motorX,0x0C86); //Reseta e manda os paramentros para andar na velocidade 0110 e 180 em decimal
	delay(100);
	saida(motorX,0x2C86);
	alt_printf ("aabaaa");
	//IOWR_ALTERA_AVALON_UART_TXDATA(UART_BASE, "11010100");
	//while(1){
		//alt_printf(IORD_ALTERA_AVALON_UART_RXDATA(UART_BASE));
		//delay(100);
	//}

	return 0;
}
/*
std::string controla_motor(int velocidade,int distancia, int dir){
	distancia=distancia*16;
	int rst=8192;
	dir=dir*16384;
	int total = velocidade+dir+rst;
    std::stringstream t;
    t<<std::hex<<total;
    std::string str="0x";
    str.append(t.str());
    cout<<str;
    return str;
}*/
